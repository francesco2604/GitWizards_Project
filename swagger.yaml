swagger: '2.0'
info:
  version: '1.0.0'
  title: "GitWizards_Project API"
  description: Definizione API per progettto ingegneria software 2
  license:
    name: MIT
    url: https://github.com/apiaryio/polls-api/blob/master/LICENSE
host: polls.apiblueprint.org
basePath: /
schemes:
- https
paths:
  /users:
    x-summary: Gestione Utenti
    get:
      summary: Ricava la lista degli utenti del sistema
      produces:
        - application/json
      responses:
        200:
          description: Lista degli utenti recuperata con successo
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
          examples:
            application/json:
              - id: 12
                name: 'Mario'
                surname: 'Rossi'
              - id: 13
                name: 'Luigi'
                surname: 'Bo'
        404:
          description: Lista degli utenti non trovata
          schema:
              $ref: '#/definitions/Error'
              
    post:
      summary: Registra un nuovo utente nel sistema
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          required: true
          description: L'utente che deve essere aggiunto al sistema
          schema:
            $ref: '#/definitions/User'
      responses:
        201:
          description: Utente registrato nel sistema
          headers:
            Location:
              description: "La locazione API dell'utente appena creato"
              type: "string"
          schema:
              $ref: '#/definitions/User'
        400:
          description: Richiesta registrazione utente mal formattata
          schema:
            $ref: '#/definitions/Error'
              
  /users/{id}:
    x-summary: Utente
    get:
      summary: Ricava un utente dal sistema
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: L'ID dell'utente che si vuole ricavare
      responses:
        200:
          description: Utente recuperato con successo
          schema:
            $ref: '#/definitions/User'
        404:
          description: Utente richiesto non trovato
          schema:
              $ref: '#/definitions/Error'
              
    put:
      summary: Aggiorna le informazioni di un utente del sistema
      consumes:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: L'ID dell'utente di cui si vogliono aggiornare le informazioni
        - in: body
          name: user
          required: true
          description: La copia aggiornata dell'utente con cui si vuole aggiornare l'utente nel sistema
          schema:
            $ref: '#/definitions/User'
      responses:
        200:
          description: L'utente è stato aggiornato correttamente
        204:
          description: Nessuna operazione effettuata / No content
    delete:
      summary: Elimina un utente dal sistema
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: L'ID dell'utente che si intende eliminare
      responses:
        204:
          description: L'utente è stato eliminato con successo
        404:
          description: L'utente specificato non è stato trovato nel sistema
          schema:
            $ref: '#/definitions/Error'
          
  /exams:
    x-summary: Lista degli esami
    get:
      summary: Ricava la lista degli esami
      produces:
        - application/json
      responses:
        200:
          description: Operazione effettuata con successo
          schema:
            type: array
            items:
              $ref: '#/definitions/Exams'
          examples:
            application/json:
              - id: 123456
                Description: 'Reti'
              - id: 123457
                Description: 'Sistemi operativi'
        404:
          description: Esami non trovati
          schema:
              $ref: '#/definitions/ErrorExams'
    
  /exams/{id_ex}:
    x-summary: Esame
    get:
      summary: Visualizza informazioni esame
      produces:
        - application/json
      parameters:
        - in: path
          name: id_ex
          required: true
          type: integer
          format: int64
          description: L'ID dell'esame <br />
      responses:
        200:
          description: Operazione effettuata con successo
          schema:
            type: array 
            items:
              $ref: '#/definitions/Exams'
            example:
              application/json:
              id: 123456
              Description: 'Ingegneria del software'
          
        404:
          description: Lista degli utenti non trovata
          schema:
              $ref: '#/definitions/ErrorExams'
  
  /taskgroup/{id}:
    x-summary: Task group
    get:
      summary: Ritorna la lista delle task inserite nel task group selezionato
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          format: int64
          description: L'ID del Task group <br />
      responses:
        200:
          description: Operazione effettuata con successo
          schema:
            type: array 
            items:
              $ref: '#/definitions/Task'
            example:
              application / json:
                - id: 123
                  numeroDomanda: 5
                  question: 'Chi ha scoperto l america?'
                - id: 124
                  numeroDomanda: 6
                  question: 'Chi è stato il primo re di Roma?'
              
        404:
          description: Task group non trovato
          schema:
              $ref: '#/definitions/ErrorTaskGroup'
  
  /exams/{iD}/task/{numeroDomanda}:
    x-summary: Task
    get:
      summary: Ritorna task attraverso id esame e numero domanda
      produces:
        - application/json
      parameters:
        - in: path
          name: iD
          required: true
          type: integer
          format: int64
          description: L'ID dell'esame <br />
                       
        - in: path
          name: numeroDomanda
          required: true
          type: integer
          format: int64
          description: Numero corrispondente alla domanda che si vuole cercare <br/>
                                 
      responses:
        200:
          description: Ritorna dammanda corrispondente 
          schema:
            type: object
            items:
              $ref: '#/definitions/Task'
            example:
                id: 123456
                numeroDomanda: 2
                quuestion: 'Diametro Terra?'
        404:
          description: Domanda non trovata
          schema:
              $ref: '#/definitions/ErrorTask'
    put:
      summary: Crea una nuova domanda in un esame
      consumes:
        - application/json
      parameters:
        - in: path
          name: iD
          required: true
          type: integer
          format: int64
          description: L'ID corrispondente all'esame in cui si vuole aggiungere una domanda<br/>
          
        - in: path
          name: numeroDomanda
          required: true
          type: integer
          format: int64
          description: Numero domanda<br/>
                                   
        - in: body
          name: task
          required: true
          schema:
            $ref: '#/definitions/Task'
          description: La rappresentazione della domanda che si vuole aggiungere
      responses:
        201:
          description: La domanda è stata aggiunta correttamentw
        200:
          description: La domanda è stata è stata aggiornata correttamente
          
    delete:
      summary: Elimina una domanda da un esame
      produces: 
        - application/json
      parameters:
        - in: path
          name: iD
          required: true
          type: integer
          format: int64
          description: L'ID corrispondente all'esame in cui si vuole aggiungere una domanda<br/>
          
        - in: path
          name: numeroDomanda
          required: true
          type: integer
          format: int64
          description: Numero domanda<br/>
                                   
      responses:
        204:
          description: La domanda è stata eliminata con successo
        404:
          description: La domanda non è stata trovata
          schema:
            $ref: '#/definitions/ErrorTask'          
          
definitions:
  User:
    title: user
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      surname:
        type: string
    required:
      - name
      - surname
    example:
      id: 12
      name: 'Mario'
      surname: 'Rossi'
  
  Student:
    title: student
    type: object
    properties:
      id:
        type: integer
      matricola:
        type: integer
      user_url:
        type: string
    required:
      - id
      - matricola
    example:
      id: 12
      student_id: 345678
      user_url: '/users/12'
  
  Teacher:
    title: teacher
    type: object
    properties:
      id:
        type: integer
      department:
        type: string
      user_url:
        type: string
    required:
      - id
      - department
    example:
      id: 12
      department: 'DISI'
      user_url: '/users/12'
  
  Error:
      title: error
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
      example:
        code: '404'
        message: 'semplice messaggio di errore'
        
  Task:
    title: task
    type: object
    properties:
      iD:
        type: integer
        format: int64
      numeroDomanda:
        type: integer
        format: int64
      question:
        type: string
    required:
      - iD
      - numeroDomanda
      - question
    example:
      id: 123456
      numeroDomanda: 2
      question: 'diametro della Terra?'
  
  ErrorTask:
      title: errorTask
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
      example:
        code: '404'
        message: 'errore lettura doamnda'        
             
  Exams:
    title: esame
    type: object
    properties:
      iD:
        type: integer
        format: int64
      
      Description:
        type: string
    required:
      - iD
      - description

    example:
      id: 123456
      description: 'esame ingegneria del software 2'
  
  ErrorExams:
    title: errorExams
    type: object
    properties:
      code:
        type: string
      message:
        type: string
    required:
      - code
      - message
    example:
      code: '404'
      message: 'errore lettura esami'
  
  ErrorTaskGroup:
    title: errorTaskGroup
    type: object
    properties:
      code:
        type: string
      message:
        type: string
    required:
      - code
      - message
    example:
      code: '404'
      message: 'errore lettura task'