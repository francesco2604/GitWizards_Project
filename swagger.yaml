swagger: '2.0'
info:
  version: '1.0.0'
  title: "Exam Manager"
  description: REST API per un sistema di gestione degli esami
host: api.example.com
basePath: /v1
schemes:
- https
tags:
  - name: Users
    description: Tutto quel che riguarda la gestione degli utenti
paths:
  /users:
    get:
      summary: Ricava la lista degli utenti del sistema
      tags:
        - Users
      produces:
        - application/json
      parameters:
        - in: query
          name: role
          required: false
          type: string
          default: 'Student'
          description: Il ruolo utente con il quale si vuole filtrare la lista
        - in: query
          name: limit
          required: false
          type: integer
          default: 25
          description: Il numero massimo di entry / risultati che si vogliono nella risposta
        - in: query
          name: offset
          required: false
          type: integer
          default: 0
          description: L'offset rispetto a inizio lista da cui partire per ricavare i risultati
        - in: header
          name: user_id
          type: integer
          required: true
      responses:
        200:
          description: Lista degli utenti recuperata con successo
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
          examples:
            application/json:
              - id: 1
                firstname: 'Mario'
                lastname: 'Rossi'
                email: 'mario.rossi@example.com'
                type: 'Student'
                identification_number: 234567
              - id: 2
                firstname: 'Luca'
                lastname: 'Giorgini'
                email: 'luca.giorgini@example.com'
                type: 'Student&Teacher'
                identification_number: 890123
        404:
          description: Errore dutante il recupero della lista degli utenti
          schema:
            $ref: '#/definitions/Error'
            
    post:
      summary: Registra un nuovo utente nel sistema
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          required: true
          description: L'utente che deve essere aggiunto al sistema
          schema:
            $ref: '#/definitions/User'
      responses:
        201:
          description: Utente registrato nel sistema
          headers:
            Location:
              description: "La locazione API dell'utente appena creato"
              type: "string"
          schema:
              $ref: '#/definitions/User'
        400:
          description: Richiesta registrazione utente mal formattata
          schema:
            $ref: '#/definitions/Error'
            example:
              code: '400'
              message: 'Errore durante la registrazione utente nel sistema'
              
  /users/{id}:
    get:
      summary: Ricava un utente dal sistema
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: L'ID dell'utente che si vuole ricavare
      responses:
        200:
          description: Utente recuperato con successo
          schema:
            $ref: '#/definitions/User'
        404:
          description: Utente richiesto non trovato
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Aggiorna le informazioni di un utente del sistema
      consumes:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: L'ID dell'utente di cui si vogliono aggiornare le informazioni
        - in: body
          name: user
          required: true
          description: La copia aggiornata dell'utente con cui si vuole aggiornare l'utente nel sistema
          schema:
            $ref: '#/definitions/User'
      responses:
        200:
          description: L'utente è stato aggiornato correttamente
        204:
          description: Nessuna operazione effettuata / No content
    delete:
      summary: Elimina un utente dal sistema
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: L'ID dell'utente che si intende eliminare
      responses:
        204:
          description: L'utente è stato eliminato con successo
        404:
          description: L'utente specificato non è stato trovato nel sistema
          schema:
            $ref: '#/definitions/Error'
          
  /exams:
    get:
      summary: Ricava la lista degli esami
      produces:
        - application/json
      responses:
        200:
          description: Operazione effettuata con successo
          schema:
            type: array
            items:
              $ref: '#/definitions/Exams'
          examples:
            application/json:
              - id: 123456
                Description: 'Reti'
              - id: 123457
                Description: 'Sistemi operativi'
        404:
          description: Esami non trovati
          schema:
              $ref: '#/definitions/ErrorExams'
    post:
      summary: Aggiunge un nuovo esame nel sistema (solo docente)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: exam
          required: true
          description: L'esame che deve essere aggiunto al sistema
          schema:
            $ref: '#/definitions/Exams'
      responses:
        201:
          description: Esame aggiunto con successo
          headers:
            Location:
              description: "La locazione API dell'esame appena creato"
              type: "string"
          schema:
              $ref: '#/definitions/Exams'
        400:
          description: Richiesta aggiunta esame mal formattata
          schema:
            $ref: '#/definitions/Error'
              
  /exams/{id_ex}:
    get:
      summary: Visualizza informazioni esame
      produces:
        - application/json
      parameters:
        - in: path
          name: id_ex
          required: true
          type: integer
          format: int64
          description: L'ID dell'esame <br />
      responses:
        200:
          description: Operazione effettuata con successo
          schema:
            type: array 
            items:
              $ref: '#/definitions/Exams'
            example:
              application/json:
              id: 123456
              Description: 'Ingegneria del software'
          
        404:
          description: Lista degli utenti non trovata
          schema:
              $ref: '#/definitions/ErrorExams'
    put:
      summary: Modifica un esame esistente (solo docente)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id_ex
          required: true
          type: integer
          format: int64
          description: L'ID dell'esame <br />
        - in: body
          name: exam
          required: true
          description: La copia aggiornata dell'esame con cui si vuole aggiornare l'esame nel sistema
          schema:
            $ref: '#/definitions/Exams'
      responses:
        200:
          description: Operazione effettuata con successo
          schema:
            type: array 
            items:
              $ref: '#/definitions/Exams'
            example:
              application/json:
              id: 123456
              Description: 'Ingegneria del software'
          
        404:
          description: Lista degli utenti non trovata
          schema:
              $ref: '#/definitions/ErrorExams'
    delete:
      summary: Elimina un esame dal sistema (solo docente)
      produces:
        - application/json
      parameters:
        - in: path
          name: id_ex
          required: true
          type: integer
          description: L'ID dell'esame che si intende eliminare
      responses:
        204:
          description: L'esame è stato eliminato con successo
        404:
          description: L'esame specificato non è stato trovato nel sistema
          schema:
            $ref: '#/definitions/Error'
  /taskgroup:
    get:
      summary: Ritorna la lista delle task group presenti nel sistema (solo docente)
      produces:
        - application/json
      responses:
        200:
          description: Operazione effettuata con successo
          schema:
            type: array 
            items:
              $ref: '#/definitions/TaskGroup'
            example:
              application / json:
                - id: 123
                  description: 'Domande di storia'
                  tasks:
                  - id: 111
                    numeroDomanda: 5
                    question: 'Chi è stato il primo re di roma?'
                    type: 1
                    answers: 'Romolo;Enea;Ulisse'
                    correctAnswer: 1
                - id: 124
                  description: 'Domande di geografia'
                  tasks:
                    - id: 222
                      numeroDomanda: 7
                      question: 'Qual è la capitale dell Italia?'
                      type: 1
                      answers: 'Milano;Roma;Napoli'
                      correctAnswer: 2
        404:
          description: Task group non trovato
          schema:
              $ref: '#/definitions/ErrorTaskGroup'
    post:
      summary: Aggiunge un nuovo gruppo di task nel sistema (solo docente)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: taskgroup
          required: true
          description: Il task group che deve essere aggiunto al sistema
          schema:
            $ref: '#/definitions/TaskGroup'
      responses:
        201:
          description: Task group creato con successo
          headers:
            Location:
              description: "La locazione API del task group appena creato"
              type: "string"
          schema:
              $ref: '#/definitions/TaskGroup'
        400:
          description: Richiesta aggiunta task group mal formattata
          schema:
            $ref: '#/definitions/Error'
  /taskgroup/{id}:
    get:
      summary: Ritorna la lista delle task inserite nel task group selezionato (solo docente)
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          format: int64
          description: L'ID del Task group <br />
      responses:
        200:
          description: Operazione effettuata con successo
          schema:
            $ref: '#/definitions/Task'
        404:
          description: Task group non trovato
          schema:
              $ref: '#/definitions/Error'
    put:
      summary: Modifica un task group esistente (solo docente)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          format: int64
          description: L'ID del task group <br />
        - in: body
          name: taskgroup
          required: true
          description: La copia aggiornata del task group che si vuole sostituire a quello presente nel sistema
          schema:
            $ref: '#/definitions/TaskGroup'
      responses:
        200:
          description: Operazione effettuata con successo
          schema:
            type: array 
            items:
              $ref: '#/definitions/TaskGroup'
            example:
              application/json:
              id: 123456
              Description: 'Domande su javascript'
              tasks:
                - id: 111
                  numeroDomanda: 1
                  question: "Dove viene utilizzato principalmente javascript?"
                  type: 2
                - id: 222
                  numeroDomanda: 2
                  question: "In quale tag html si mette il codice javascript?"
                  type: 1
                  answers: '<scripting>;<js>;<javascript>;<script>'
                  correctAnswer: 4
          
        404:
          description: Lista degli utenti non trovata
          schema:
              $ref: '#/definitions/Error'
    delete:
      summary: Elimina un task group (solo docente)
      produces: 
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          format: int64
          description: L'ID corrispondente al task group che si vuole eliminare<br/>
      responses:
        204:
          description: Il task group è stato eliminato con successo
        404:
          description: Il task group non è stato trovato
          schema:
            $ref: '#/definitions/Error'          
  /exams/{iD}/task/{numeroDomanda}:
    get:
      summary: Ritorna task attraverso id esame e numero domanda
      produces:
        - application/json
      parameters:
        - in: path
          name: iD
          required: true
          type: integer
          format: int64
          description: L'ID dell'esame <br />
                       
        - in: path
          name: numeroDomanda
          required: true
          type: integer
          format: int64
          description: Numero corrispondente alla domanda che si vuole cercare <br/>
                                 
      responses:
        200:
          description: Ritorna dammanda corrispondente 
          schema:
            type: object
            items:
              $ref: '#/definitions/Task'
            example:
                id: 123456
                numeroDomanda: 2
                quuestion: 'Diametro Terra?'
        404:
          description: Domanda non trovata
          schema:
              $ref: '#/definitions/ErrorTask'
    put:
      summary: Crea una nuova domanda in un esame
      consumes:
        - application/json
      parameters:
        - in: path
          name: iD
          required: true
          type: integer
          format: int64
          description: L'ID corrispondente all'esame in cui si vuole aggiungere una domanda<br/>
          
        - in: path
          name: numeroDomanda
          required: true
          type: integer
          format: int64
          description: Numero domanda<br/>
                                   
        - in: body
          name: task
          required: true
          schema:
            $ref: '#/definitions/Task'
          description: La rappresentazione della domanda che si vuole aggiungere
      responses:
        201:
          description: La domanda è stata aggiunta correttamentw
        200:
          description: La domanda è stata è stata aggiornata correttamente
          
    delete:
      summary: Elimina una domanda da un esame
      produces: 
        - application/json
      parameters:
        - in: path
          name: iD
          required: true
          type: integer
          format: int64
          description: L'ID corrispondente all'esame in cui si vuole aggiungere una domanda<br/>
          
        - in: path
          name: numeroDomanda
          required: true
          type: integer
          format: int64
          description: Numero domanda<br/>
                                   
      responses:
        204:
          description: La domanda è stata eliminata con successo
        404:
          description: La domanda non è stata trovata
          schema:
            $ref: '#/definitions/ErrorTask'          
          
definitions:
  User:
    title: user
    type: object
    properties:
      id:
        type: integer
        description: Il numero che identifica univocamente l'utente nel sistema
      firstname:
        type: string
        description: Il nome dell'utente
      lastname:
        type: string
        description: Il cognome dell'utente
      email:
        type: string
        description: L'indirizzo e-mail dell'utente
      type:
        type: string
        enum: [ Student, Teacher, Student&Teacher]
        description: Identifica il tipo di utente. Può essere uno studente, un docente o entrambi.
      identification_number:
        type: integer
        description: Il numero che identifica univocamente l'utente come studente o/e come docente.
                     E' un numero relativo al badge universitario dell'utente.
    required:
      - firstname
      - lastname
      - email
      - type
      - identification_number
    example:
      id: 12
      firstname: 'Mario'
      lastname: 'Rossi'
      email: 'mario.rossi@example.com'
      type: 'Student'
      identification_number: 345678

  Error:
    title: error
    type: object
    properties:
      code:
        type: string
        description: Il codice d'errore ritornato dal server web
      message:
        type: string
        description: La descrizione dell'errore ritornato dal server web
    required:
      - code
      - message
    example:
      code: '404'
      message: 'Risorsa non trovata'
        
  Task:
    title: task
    type: object
    properties:
      iD:
        type: integer
        format: int64
      numeroDomanda:
        type: integer
        format: int64
      question:
        type: string
      answers:
        type: integer
        format: int64
      correctAnswer:
        type: integer
        format: int64
    required:
      - iD
      - numeroDomanda
      - question
      - type
    example:
      id: 123456
      numeroDomanda: 2
      question: 'diametro della Terra?'
      type: 1
      answers: '9.742 km;19.742 km;12.742 km'
      correctAnswer: 3
  
  ErrorTask:
      title: errorTask
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
      example:
        code: '404'
        message: 'errore lettura doamnda'        
             
  Exams:
    title: esame
    type: object
    properties:
      iD:
        type: integer
        format: int64
      
      description:
        type: string
    required:
      - iD
      - description

    example:
      id: 123456
      description: 'esame ingegneria del software 2'
  
  ErrorExams:
    title: errorExams
    type: object
    properties:
      code:
        type: string
      message:
        type: string
    required:
      - code
      - message
    example:
      code: '404'
      message: 'errore lettura esami'
  
  TaskGroup:
    title: taskgroup
    type: object
    properties:
      iD:
        type: integer
        format: int64
      description:
        type: string
      tasks:
        type: array
        items: 
          $ref: '#/definitions/Task'          
    required:
      - iD
      - description
    example:
      id: 123456
      description: 'Domande su javascript'
      
  ErrorTaskGroup:
    title: errorTaskGroup
    type: object
    properties:
      code:
        type: string
      message:
        type: string
    required:
      - code
      - message
    example:
      code: '404'
      message: 'errore lettura task'